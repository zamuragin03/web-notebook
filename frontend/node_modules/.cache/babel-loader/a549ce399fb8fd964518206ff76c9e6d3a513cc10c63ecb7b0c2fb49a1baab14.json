{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/pages/NotesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesList = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: 1,\n    title: 'Jaba script',\n    description: 'JavaScript'\n  }, {\n    id: 2,\n    title: 'Petyhon',\n    description: 'python'\n  }, {\n    id: 3,\n    title: 'C Shurpa',\n    description: 'C#'\n  }]);\n  useEffect(() => {\n    // getNotes()\n  }, []);\n  let getNotes = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/get_notes');\n    let data = await response.json();\n    // setNotes(data)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [notes.map((note, index) => {\n      /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: note.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    }), \"hello\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(NotesList, \"QGwqXx292y/RhVr3JQh4ooGVfGc=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NotesList","_s","notes","setNotes","id","title","description","getNotes","response","fetch","data","json","children","map","note","index","body","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/pages/NotesList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst NotesList = () => {\n    const [notes, setNotes] = useState([\n        {id:1, title:'Jaba script', description:'JavaScript'},\n    {id:2, title:'Petyhon', description:'python'},\n    {id:3, title:'C Shurpa', description:'C#'}\n    ]);\n\n    useEffect(() => {\n        // getNotes()\n    }, []);\n\n    let getNotes = async () => {\n\n        let response = await fetch('http://127.0.0.1:8000/api/get_notes')\n        let data = await response.json()\n        // setNotes(data)\n    }\n    return (\n        <div>\n            {notes.map((note, index) => {\n            <h3>{note.body}</h3>\n        })}\n            hello\n        </div>\n    )\n}\nexport default NotesList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAC/B;IAACQ,EAAE,EAAC,CAAC;IAAEC,KAAK,EAAC,aAAa;IAAEC,WAAW,EAAC;EAAY,CAAC,EACzD;IAACF,EAAE,EAAC,CAAC;IAAEC,KAAK,EAAC,SAAS;IAAEC,WAAW,EAAC;EAAQ,CAAC,EAC7C;IAACF,EAAE,EAAC,CAAC;IAAEC,KAAK,EAAC,UAAU;IAAEC,WAAW,EAAC;EAAI,CAAC,CACzC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACZ;EAAA,CACH,EAAE,EAAE,CAAC;EAEN,IAAIU,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAEvB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;IACjE,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAChC;EACJ,CAAC;;EACD,oBACIZ,OAAA;IAAAa,QAAA,GACKV,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC5B,aAAAhB,OAAA;QAAAa,QAAA,EAAKE,IAAI,CAACE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IACxB,CAAC,CAAC,EAAC,OAEH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEd,CAAC;AAAAnB,EAAA,CAzBKD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA0Bf,eAAeA,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}