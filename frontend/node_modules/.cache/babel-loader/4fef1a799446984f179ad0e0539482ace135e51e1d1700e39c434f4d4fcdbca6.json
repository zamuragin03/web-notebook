{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/components/Context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).username : null);\n  const [authTokens, setauthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  const [userId, setuserId] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).user_id : null);\n  const [errorr, seterrorr] = useState(initialState);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, 270000);\n    return () => clearInterval(interval);\n  }, [authTokens]);\n  let loginUser = async (username, password) => {\n    let response = await fetch(`/api/token/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password': password\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setauthTokens(data);\n      setUser(jwt_decode(data.access).username);\n      setuserId(jwt_decode(data.access).user_id);\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      alert('bad data');\n    }\n  };\n  let logoutUser = () => {\n    setauthTokens(null);\n    setUser(null);\n    setuserId(null);\n    localStorage.removeItem('authTokens');\n  };\n  let updateToken = async () => {\n    console.log('token updated');\n    let response = await fetch(`/api/token/refresh/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setauthTokens(data);\n      setUser(jwt_decode(data.access).username);\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n  };\n  let registerUser = async (username, password) => {\n    // console.log(username);\n    // console.log(password);\n    let response = await fetch(`api/drf-auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password': password\n      })\n    });\n  };\n  let contextData = {\n    user: user,\n    loginUser: loginUser,\n    logoutUser: logoutUser,\n    authTokens: authTokens,\n    registerUser: registerUser,\n    userId: userId,\n    updateToken: updateToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"0txIFu404pkNjQdtugyL4bwDuTs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","localStorage","getItem","username","authTokens","setauthTokens","JSON","parse","userId","setuserId","user_id","errorr","seterrorr","initialState","interval","setInterval","updateToken","clearInterval","loginUser","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","alert","logoutUser","removeItem","console","log","refresh","registerUser","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/components/Context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nconst AuthContext = createContext()\nexport default AuthContext\n\nexport const AuthProvider = ({ children }) => {\n\n    const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).username : null)\n    const [authTokens, setauthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    const [userId, setuserId] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).user_id : null)\n    const [errorr, seterrorr] = useState(initialState);\n    useEffect(() => {\n        let interval = setInterval(() => {\n            if (authTokens) {\n                updateToken()\n            }\n        }, 270000);\n        return () => clearInterval(interval)\n\n    }, [authTokens]);\n\n    let loginUser = async (username, password) => {\n        let response = await fetch(`/api/token/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'username': username, 'password': password })\n        })\n        let data = await response.json()\n        if (response.status === 200) {\n            setauthTokens(data)\n            setUser(jwt_decode(data.access).username)\n            setuserId(jwt_decode(data.access).user_id)\n            localStorage.setItem('authTokens', JSON.stringify(data))\n\n        }\n        else {\n            alert('bad data')\n        }\n    }\n    let logoutUser = () => {\n        setauthTokens(null)\n        setUser(null)\n        setuserId(null)\n        localStorage.removeItem('authTokens')\n\n    }\n    let updateToken = async () => {\n        console.log('token updated');\n        let response = await fetch(`/api/token/refresh/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'refresh': authTokens.refresh })\n        })\n        let data = await response.json()\n        if (response.status === 200) {\n            setauthTokens(data)\n            setUser(jwt_decode(data.access).username)\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }\n        else {\n            logoutUser()\n        }\n    }\n    let registerUser = async (username, password) => {\n        // console.log(username);\n        // console.log(password);\n        let response = await fetch(`api/drf-auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'username': username, 'password': password })\n        })\n    }\n\n\n    let contextData = {\n        user: user,\n        loginUser: loginUser,\n        logoutUser: logoutUser,\n        authTokens: authTokens,\n        registerUser:registerUser,\n        userId:userId,\n        updateToken: updateToken\n    }\n\n    return (\n        <AuthContext.Provider value={contextData}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}