{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport AuthContext from '../../components/Context/AuthContext';\nimport { getCat, get_all_cats } from '../../API/Cats/CatsService';\nimport { getNote, updateNote } from '../../API/notes/NoteService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatSelector = _ref => {\n  _s();\n  let {\n    note_id,\n    value,\n    defaultValue,\n    ...props\n  } = _ref;\n  const {\n    user,\n    authTokens\n  } = useContext(AuthContext);\n  const [note, setNote] = useState({});\n  const [selectedCat, setselectedCat] = useState('');\n  const [cats, setCats] = useState([]);\n  const [fetchCats, isLoading, error] = useFetching(async () => {\n    let fetched_cats = await get_all_cats();\n    setCats(fetched_cats);\n  });\n  const fetch_cat = async () => {\n    // if (note === null) return\n    // console.log(note.category);\n    let response0 = await getNote(authTokens.access, note_id);\n    if (response0.status === 200) {\n      let _note = await response0.json();\n      setNote(() => _note);\n    }\n    let response = await getCat(note.category);\n    if (response.status === 200) {\n      let data = await response.json();\n      setselectedCat(data);\n    }\n  };\n  useEffect(() => {\n    console.log(note_id);\n    fetch_cat();\n    if (note != null) {\n      fetchCats();\n    }\n  }, []);\n  useEffect(() => {\n    update_cat();\n  }, [selectedCat]);\n  function ChangeCat(value) {\n    cats.forEach(element => {\n      if (element.name == value) {\n        setselectedCat(element);\n        return;\n      }\n    });\n  }\n  let update_cat = async () => {\n    if (note == null) return;\n    await updateNote(authTokens.access, note_id, selectedCat.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    ...props,\n    defaultValue: selectedCat.name,\n    value: selectedCat.name,\n    onChange: e => ChangeCat(e.target.value),\n    children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: cat.name,\n      children: cat.name\n    }, cat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(CatSelector, \"34xIykEewurSOYnlrNw/7kc2meE=\", false, function () {\n  return [useFetching];\n});\n_c = CatSelector;\nexport default CatSelector;\nvar _c;\n$RefreshReg$(_c, \"CatSelector\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useFetching","AuthContext","getCat","get_all_cats","getNote","updateNote","jsxDEV","_jsxDEV","CatSelector","_ref","_s","note_id","value","defaultValue","props","user","authTokens","note","setNote","selectedCat","setselectedCat","cats","setCats","fetchCats","isLoading","error","fetched_cats","fetch_cat","response0","access","status","_note","json","response","category","data","console","log","update_cat","ChangeCat","forEach","element","name","id","onChange","e","target","children","map","cat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx"],"sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react'\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\n\nimport AuthContext from '../../components/Context/AuthContext';\nimport { getCat, get_all_cats } from '../../API/Cats/CatsService';\nimport { getNote, updateNote } from '../../API/notes/NoteService';\n\nconst CatSelector = ({ note_id, value, defaultValue, ...props }) => {\n    const { user, authTokens } = useContext(AuthContext)\n    const [note, setNote] = useState({});\n    const [selectedCat, setselectedCat] = useState('');\n    const [cats, setCats] = useState([]);\n    const [fetchCats, isLoading, error] = useFetching(async () => {\n        let fetched_cats = await get_all_cats()\n        setCats(fetched_cats)\n    })\n    const fetch_cat = async () => {\n        // if (note === null) return\n        // console.log(note.category);\n        let response0 = await getNote(authTokens.access, note_id)\n        if (response0.status === 200) {\n            let _note = await response0.json()\n            setNote(()=>_note)\n        }\n        let response = await getCat(note.category)\n        if (response.status === 200) {\n            let data = await response.json()\n            setselectedCat(data)\n        }\n    }\n    useEffect(() => {\n        console.log(note_id);\n        fetch_cat()\n        if (note != null) {\n            fetchCats()\n        }\n    }, [])\n    useEffect(() => {\n        update_cat()\n\n    }, [selectedCat])\n\n\n    function ChangeCat(value) {\n        cats.forEach(element => {\n            if (element.name == value) {\n                setselectedCat(element)\n                return\n            }\n        });\n    }\n\n    let update_cat = async () => {\n        if (note == null) return\n        await updateNote(authTokens.access, note_id, selectedCat.id)\n    }\n    return (\n        <select {...props} defaultValue={selectedCat.name} value={selectedCat.name} onChange={(e) => ChangeCat(e.target.value)}>\n            {cats.map(cat =>\n                <option key={cat.id} value={cat.name} >\n                    {cat.name}\n                </option>\n            )}\n        </select>\n\n    )\n}\n\nexport default CatSelector"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}