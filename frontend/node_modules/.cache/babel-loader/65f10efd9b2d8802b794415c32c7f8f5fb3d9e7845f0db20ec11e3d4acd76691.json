{"ast":null,"code":"export default class NoteService {\n  static async get_all_notes() {\n    try {\n      const response = await fetch('api/get_notes');\n      const response2 = await fetch('api/get_cat');\n      colors = await response2.json();\n      let notes = await response.json();\n      notes.forEach(element => {\n        element['color'] = 'none';\n      });\n      // console.log(cat_id);\n      console.log(notes);\n      return response.json();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}","map":{"version":3,"names":["NoteService","get_all_notes","response","fetch","response2","colors","json","notes","forEach","element","console","log","error"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/API/notes/NoteService.js"],"sourcesContent":["export default class NoteService {\n    static async get_all_notes() {\n        try {\n            const response = await fetch('api/get_notes')\n            const response2 = await fetch('api/get_cat')\n            colors = await response2.json()\n            let notes = await response.json()\n            notes.forEach(element => {\n                element['color'] = 'none'\n            });\n            // console.log(cat_id);\n            console.log(notes);\n            return response.json()\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}"],"mappings":"AAAA,eAAe,MAAMA,WAAW,CAAC;EAC7B,aAAaC,aAAaA,CAAA,EAAG;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMC,SAAS,GAAG,MAAMD,KAAK,CAAC,aAAa,CAAC;MAC5CE,MAAM,GAAG,MAAMD,SAAS,CAACE,IAAI,EAAE;MAC/B,IAAIC,KAAK,GAAG,MAAML,QAAQ,CAACI,IAAI,EAAE;MACjCC,KAAK,CAACC,OAAO,CAACC,OAAO,IAAI;QACrBA,OAAO,CAAC,OAAO,CAAC,GAAG,MAAM;MAC7B,CAAC,CAAC;MACF;MACAC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MAClB,OAAOL,QAAQ,CAACI,IAAI,EAAE;IAE1B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB;EAEJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}