{"ast":null,"code":"export default class NoteService {\n  static async get_all_notes() {\n    try {\n      const tokens = JSON.parse(localStorage.getItem('authTokens'));\n      console.log(tokens.refresh);\n      let refresh_response = await fetch(`/api/token/refresh`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'refresh': tokens.refresh\n        })\n      });\n      let new_tokens = await refresh_response.json();\n      console.log(new_tokens);\n      // localStorage.setItem('authTokens', JSON.stringify({}))\n\n      // console.log(refresh_response.status);\n      const response = await fetch('api/get_notes', {\n        headers: {\n          'Authorization': `Bearer ${tokens === null || tokens === void 0 ? void 0 : tokens.access}`\n        }\n      });\n      return response.json();\n    } catch (error) {}\n  }\n}","map":{"version":3,"names":["NoteService","get_all_notes","tokens","JSON","parse","localStorage","getItem","console","log","refresh","refresh_response","fetch","method","headers","body","stringify","new_tokens","json","response","access","error"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/API/notes/NoteService.js"],"sourcesContent":["export default class NoteService {\n    static async get_all_notes() {\n        try {\n            const tokens = JSON.parse(localStorage.getItem('authTokens'))\n            console.log(tokens.refresh);\n            let refresh_response = await fetch(`/api/token/refresh`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ 'refresh': tokens.refresh })\n            })\n                let new_tokens = await refresh_response.json()\n                console.log(new_tokens);\n                // localStorage.setItem('authTokens', JSON.stringify({}))\n\n            // console.log(refresh_response.status);\n            const response = await fetch('api/get_notes', {\n                headers: {\n                    'Authorization': `Bearer ${tokens?.access}`\n                }\n            }\n            )\n\n            return response.json()\n        } catch (error) {\n        }\n\n    }\n}"],"mappings":"AAAA,eAAe,MAAMA,WAAW,CAAC;EAC7B,aAAaC,aAAaA,CAAA,EAAG;IACzB,IAAI;MACA,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;MAC7DC,OAAO,CAACC,GAAG,CAACN,MAAM,CAACO,OAAO,CAAC;MAC3B,IAAIC,gBAAgB,GAAG,MAAMC,KAAK,CAAE,oBAAmB,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEX,IAAI,CAACY,SAAS,CAAC;UAAE,SAAS,EAAEb,MAAM,CAACO;QAAQ,CAAC;MACtD,CAAC,CAAC;MACE,IAAIO,UAAU,GAAG,MAAMN,gBAAgB,CAACO,IAAI,EAAE;MAC9CV,OAAO,CAACC,GAAG,CAACQ,UAAU,CAAC;MACvB;;MAEJ;MACA,MAAME,QAAQ,GAAG,MAAMP,KAAK,CAAC,eAAe,EAAE;QAC1CE,OAAO,EAAE;UACL,eAAe,EAAG,UAASX,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEiB,MAAO;QAC9C;MACJ,CAAC,CACA;MAED,OAAOD,QAAQ,CAACD,IAAI,EAAE;IAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE,CAChB;EAEJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}