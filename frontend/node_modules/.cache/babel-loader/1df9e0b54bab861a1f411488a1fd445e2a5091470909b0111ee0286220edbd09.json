{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/pages/Notes/NotesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NoteItem from './NoteItem';\nimport { Link, useNavigate } from 'react-router-dom';\nimport CreateButton from '../../UI/CreateButton/CreateButton';\nimport NoteService from '../../API/notes/NoteService';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport AuthContext from '../../components/Context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotesList = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [notes, setNotes] = useState([]);\n  ;\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const navigate = useNavigate();\n  const [errorfetching, seterrorfetching] = useState('');\n  const [fetchNotes, isLoading, error] = useFetching(async () => {\n    let notes = await NoteService.get_all_notes();\n    console.log(notes);\n    if (notes == null) {\n      seterrorfetching('Please Authorize');\n      return;\n    }\n    let sorted_note = notes.sort(function (b, a) {\n      return new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime();\n    });\n    setNotes(sorted_note);\n  });\n  let CreateNote = () => {\n    navigate('/create_note');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note_list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"NotesTitle\",\n      children: \"notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateButton, {\n      className: \"add_from_list\",\n      onClick: CreateNote,\n      children: \"create new note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), errorfetching && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: errorfetching\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(NoteItem, {\n        className: \"NoteItem\",\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(NotesList, \"UGzVawfyGPeHm9c0Ed8bujWXRGo=\", false, function () {\n  return [useNavigate, useFetching];\n});\n_c = NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useState","useEffect","NoteItem","Link","useNavigate","CreateButton","NoteService","useFetching","AuthContext","jsxDEV","_jsxDEV","NotesList","_s","user","useContext","notes","setNotes","fetchNotes","navigate","errorfetching","seterrorfetching","isLoading","error","get_all_notes","console","log","sorted_note","sort","b","a","Date","updated_at","getTime","CreateNote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","note","id","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/pages/Notes/NotesList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport NoteItem from './NoteItem';\nimport { Link, useNavigate} from 'react-router-dom'\nimport CreateButton from '../../UI/CreateButton/CreateButton';\nimport NoteService from '../../API/notes/NoteService';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport AuthContext from '../../components/Context/AuthContext';\n\nexport const NotesList = () => {\n    const {user} = useContext(AuthContext)\n\n    const [notes, setNotes] = useState([\n    ]);;\n    useEffect(() => {\n        fetchNotes()\n    }, []);\n    const navigate = useNavigate();\n    const [errorfetching, seterrorfetching] = useState('');\n    const [fetchNotes, isLoading, error] = useFetching(async () => {\n        let notes = await NoteService.get_all_notes()\n        console.log(notes);\n        if (notes ==null) {\n            seterrorfetching('Please Authorize')\n            return\n        }\n        let sorted_note = notes.sort(function (b, a) {\n            return new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime();\n        });\n        setNotes(sorted_note)\n    })\n    let CreateNote = () => {\n        navigate('/create_note')\n    }\n    return (\n        <div className='note_list' >\n            <h2 className='NotesTitle' >notes</h2>\n            <CreateButton className='add_from_list' onClick={CreateNote}>\n                create new note\n            </CreateButton>\n            {error &&\n                <h2>Ошибка {error}</h2>\n            }\n            {errorfetching &&\n                <h2>{errorfetching}</h2>\n            }\n            {isLoading ? <h1>loading...</h1> :\n                <div>\n                    {\n                        notes.map(note => (\n                            <NoteItem className='NoteItem' key={note.id} note={note} />\n                        ))\n                    }\n                </div>\n            }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}