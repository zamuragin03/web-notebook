{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport AuthContext from '../../components/Context/AuthContext';\nimport { get_all_cats } from '../../API/Cats/CatsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatSelector = _ref => {\n  _s();\n  let {\n    note,\n    value,\n    defaultValue,\n    ...props\n  } = _ref;\n  const {\n    user,\n    authTokens\n  } = useContext(AuthContext);\n  const [selectedCat, setselectedCat] = useState('');\n  const [cats, setCats] = useState([]);\n  const [fetchCats, isLoading, error] = useFetching(async () => {\n    let fetched_cats = await get_all_cats();\n    setCats(fetched_cats);\n  });\n  const fetch_cat = async () => {\n    if (note == null) return;\n    let response = await fetch(`/api/get_cat/${note === null || note === void 0 ? void 0 : note.category}`);\n    if (response.status === 200) {\n      let data = await response.json();\n      setselectedCat(data);\n    }\n  };\n  useEffect(() => {\n    fetch_cat();\n    if (note != null) {\n      fetchCats();\n    }\n  }, [note]);\n  useEffect(() => {\n    update_cat();\n  }, [selectedCat]);\n  function ChangeCat(value) {\n    cats.forEach(element => {\n      if (element.name == value) {\n        setselectedCat(element);\n        return;\n      }\n    });\n  }\n  let update_cat = async () => {\n    if (note == null) return;\n    // console.log(selectedCat?.id.toString()+' ' +selectedCat.name);\n    await fetch(`/api/update_note/${note.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authTokens.access}`\n      },\n      body: JSON.stringify({\n        'category': selectedCat.id\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    ...props,\n    defaultValue: selectedCat.name,\n    value: selectedCat.name,\n    onChange: e => ChangeCat(e.target.value),\n    children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: cat.name,\n      children: cat.name\n    }, cat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(CatSelector, \"CV/Bwds41IDDlTjJNmIm/mtBkuo=\", false, function () {\n  return [useFetching];\n});\n_c = CatSelector;\nexport default CatSelector;\nvar _c;\n$RefreshReg$(_c, \"CatSelector\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useFetching","AuthContext","get_all_cats","jsxDEV","_jsxDEV","CatSelector","_ref","_s","note","value","defaultValue","props","user","authTokens","selectedCat","setselectedCat","cats","setCats","fetchCats","isLoading","error","fetched_cats","fetch_cat","response","fetch","category","status","data","json","update_cat","ChangeCat","forEach","element","name","id","method","headers","access","body","JSON","stringify","onChange","e","target","children","map","cat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx"],"sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react'\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\n\nimport AuthContext from '../../components/Context/AuthContext';\nimport { get_all_cats } from '../../API/Cats/CatsService';\n\nconst CatSelector = ({ note, value, defaultValue, ...props }) => {\n    const { user, authTokens } = useContext(AuthContext)\n\n    const [selectedCat, setselectedCat] = useState('');\n    const [cats, setCats] = useState([]);\n    const [fetchCats, isLoading, error] = useFetching(async () => {\n        let fetched_cats = await get_all_cats()\n        setCats(fetched_cats)\n    })\n    const fetch_cat = async () => {\n        if (note == null) return\n        let response = await fetch(`/api/get_cat/${note?.category}`)\n        if (response.status === 200) {\n            let data = await response.json()\n            setselectedCat(data)\n        }\n    }\n    useEffect(() => {\n        fetch_cat()\n        if (note != null) {\n            fetchCats()\n        }\n    }, [note,])\n    useEffect(() => {\n        update_cat()\n\n    }, [selectedCat])\n\n\n    function ChangeCat(value) {\n        cats.forEach(element => {\n            if (element.name == value) {\n                setselectedCat(element)\n                return\n            }\n        });\n    }\n\n    let update_cat = async () => {\n        if (note == null) return\n        // console.log(selectedCat?.id.toString()+' ' +selectedCat.name);\n        await fetch(`/api/update_note/${note.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${authTokens.access}`\n                \n            },\n            body: JSON.stringify({ 'category': selectedCat.id })\n        })\n    }\n    return (\n        <select {...props} defaultValue={selectedCat.name} value={selectedCat.name} onChange={(e) => ChangeCat(e.target.value)}>\n            {cats.map(cat =>\n                <option key={cat.id} value={cat.name} >\n                    {cat.name}\n                </option>\n            )}\n        </select>\n\n    )\n}\n\nexport default CatSelector"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}