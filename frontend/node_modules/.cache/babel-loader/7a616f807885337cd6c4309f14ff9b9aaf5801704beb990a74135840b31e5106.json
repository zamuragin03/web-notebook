{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx\",\n  _s = $RefreshSig$();\nimport ColorPicker from '../ColorPicker/ColorPicker';\nimport classes from './CatSelector.module.css';\nimport React, { useEffect, useState } from 'react';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport CatsService from '../../API/Cats/CatsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatSelector = _ref => {\n  _s();\n  let {\n    note,\n    value,\n    defaultValue,\n    ...props\n  } = _ref;\n  const [selectedCat, setselectedCat] = useState({\n    'name': '',\n    id: 0\n  });\n  const [cats, setCats] = useState([]);\n  const [fetchCats, isLoading, error] = useFetching(async () => {\n    let fetched_cats = await CatsService.get_all_cats();\n    setCats(fetched_cats);\n  });\n  useEffect(() => {\n    fetchCats();\n    setselectedCat(note === null || note === void 0 ? void 0 : note.category.name);\n  }, [], selectedCat);\n  function ChangeCat(value) {\n    setselectedCat(value);\n    note.category.name = value;\n    update_cat();\n  }\n  let update_cat = async () => {\n    console.log();\n    // await fetch(`/api/update_note/${note.id}`, {\n    //     method: 'PUT',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify(note)\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    ...props,\n    value: selectedCat,\n    onChange: e => ChangeCat(e.target.value),\n    children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: cat.name,\n      children: cat.name\n    }, cat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(CatSelector, \"n6KIoeNmzrg7+GE35+od1uYk9L8=\", false, function () {\n  return [useFetching];\n});\n_c = CatSelector;\nexport default CatSelector;\nvar _c;\n$RefreshReg$(_c, \"CatSelector\");","map":{"version":3,"names":["ColorPicker","classes","React","useEffect","useState","useFetching","CatsService","jsxDEV","_jsxDEV","CatSelector","_ref","_s","note","value","defaultValue","props","selectedCat","setselectedCat","id","cats","setCats","fetchCats","isLoading","error","fetched_cats","get_all_cats","category","name","ChangeCat","update_cat","console","log","onChange","e","target","children","map","cat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx"],"sourcesContent":["import ColorPicker from '../ColorPicker/ColorPicker'\nimport classes from './CatSelector.module.css'\nimport React, { useEffect, useState } from 'react'\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport CatsService from '../../API/Cats/CatsService';\n\nconst CatSelector = ({ note, value, defaultValue, ...props }) => {\n    const [selectedCat, setselectedCat] = useState({'name':'', id:0});\n    const [cats, setCats] = useState([]);\n    const [fetchCats, isLoading, error] = useFetching(async () => {\n        let fetched_cats = await CatsService.get_all_cats()\n        setCats(fetched_cats)\n    })\n\n    useEffect(() => {\n        fetchCats()\n        setselectedCat(note?.category.name)\n    }, [], selectedCat)\n\n    function ChangeCat(value) {\n        setselectedCat(value)\n        note.category.name=value\n        update_cat()\n    }\n    let update_cat = async ()=> {\n        console.log();\n        // await fetch(`/api/update_note/${note.id}`, {\n        //     method: 'PUT',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify(note)\n        // })\n    }\n    return (\n        <select {...props}  value={selectedCat} onChange={(e) => ChangeCat(e.target.value)}>\n            {cats.map(cat =>\n                <option key={cat.id} value={cat.name} >\n                    {cat.name}\n                </option>\n            )}\n        </select>\n\n    )\n}\n\nexport default CatSelector"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,4BAA4B;AACpD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,yCAAyC;AACrE,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,IAAI;IAAEC,KAAK;IAAEC,YAAY;IAAE,GAAGC;EAAM,CAAC,GAAAL,IAAA;EACxD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC;IAAC,MAAM,EAAC,EAAE;IAAEc,EAAE,EAAC;EAAC,CAAC,CAAC;EACjE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,SAAS,EAAEC,SAAS,EAAEC,KAAK,CAAC,GAAGlB,WAAW,CAAC,YAAY;IAC1D,IAAImB,YAAY,GAAG,MAAMlB,WAAW,CAACmB,YAAY,EAAE;IACnDL,OAAO,CAACI,YAAY,CAAC;EACzB,CAAC,CAAC;EAEFrB,SAAS,CAAC,MAAM;IACZkB,SAAS,EAAE;IACXJ,cAAc,CAACL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,QAAQ,CAACC,IAAI,CAAC;EACvC,CAAC,EAAE,EAAE,EAAEX,WAAW,CAAC;EAEnB,SAASY,SAASA,CAACf,KAAK,EAAE;IACtBI,cAAc,CAACJ,KAAK,CAAC;IACrBD,IAAI,CAACc,QAAQ,CAACC,IAAI,GAACd,KAAK;IACxBgB,UAAU,EAAE;EAChB;EACA,IAAIA,UAAU,GAAG,MAAAA,CAAA,KAAW;IACxBC,OAAO,CAACC,GAAG,EAAE;IACb;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EACD,oBACIvB,OAAA;IAAA,GAAYO,KAAK;IAAGF,KAAK,EAAEG,WAAY;IAACgB,QAAQ,EAAGC,CAAC,IAAKL,SAAS,CAACK,CAAC,CAACC,MAAM,CAACrB,KAAK,CAAE;IAAAsB,QAAA,EAC9EhB,IAAI,CAACiB,GAAG,CAACC,GAAG,iBACT7B,OAAA;MAAqBK,KAAK,EAAEwB,GAAG,CAACV,IAAK;MAAAQ,QAAA,EAChCE,GAAG,CAACV;IAAI,GADAU,GAAG,CAACnB,EAAE;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEV;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAGjB,CAAC;AAAA9B,EAAA,CAtCKF,WAAW;EAAA,QAGyBJ,WAAW;AAAA;AAAAqC,EAAA,GAH/CjC,WAAW;AAwCjB,eAAeA,WAAW;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}