{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/pages/Notes/NotesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NoteItem from './NoteItem';\nimport { Link, useNavigate } from 'react-router-dom';\nimport CreateButton from '../../UI/CreateButton/CreateButton';\nimport NoteService from '../../API/notes/NoteService';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotesList = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  ;\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const navigate = useNavigate();\n  const [errorfetching, seterrorfetching] = useState('');\n  const [fetchNotes, isLoading, error] = useFetching(async () => {\n    let notes = await NoteService.get_all_notes();\n    console.log(notes);\n    if (notes.detail == 'Authentication credentials were not provided.') {\n      return;\n    }\n    let sorted_note = notes.sort(function (b, a) {\n      return new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime();\n    });\n    setNotes(sorted_note);\n  });\n  let CreateNote = () => {\n    navigate('/create_note');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note_list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"NotesTitle\",\n      children: \"notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateButton, {\n      className: \"add_from_list\",\n      onClick: CreateNote,\n      children: \"create new note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(NoteItem, {\n        className: \"NoteItem\",\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(NotesList, \"Mo7YJ87wNPRUN5LCDw7LEBux7uw=\", false, function () {\n  return [useNavigate, useFetching];\n});\n_c = NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useState","useEffect","NoteItem","Link","useNavigate","CreateButton","NoteService","useFetching","jsxDEV","_jsxDEV","NotesList","_s","notes","setNotes","fetchNotes","navigate","errorfetching","seterrorfetching","isLoading","error","get_all_notes","console","log","detail","sorted_note","sort","b","a","Date","updated_at","getTime","CreateNote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","note","id","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/pages/Notes/NotesList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport NoteItem from './NoteItem';\nimport { Link, useNavigate } from 'react-router-dom'\nimport CreateButton from '../../UI/CreateButton/CreateButton';\nimport NoteService from '../../API/notes/NoteService';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\n\nexport const NotesList = () => {\n    const [notes, setNotes] = useState([\n    ]);;\n    useEffect(() => {\n        fetchNotes()\n    }, []);\n    const navigate = useNavigate();\n    const [errorfetching, seterrorfetching] = useState('');\n    const [fetchNotes, isLoading, error] = useFetching(async () =>{\n        let notes = await NoteService.get_all_notes()\n        console.log(notes);\n        if (notes.detail =='Authentication credentials were not provided.'){\n            return\n        }\n        let sorted_note =  notes.sort(function(b, a) {\n            return new Date(a.updated_at).getTime()  - new Date(b.updated_at).getTime();\n           });\n        setNotes(sorted_note)\n    })\n    let CreateNote = () => {\n        navigate('/create_note')\n    }\n    return (\n        <div className='note_list' >\n            <h2 className='NotesTitle' >notes</h2>\n            <CreateButton className='add_from_list' onClick={CreateNote}>\n                create new note\n            </CreateButton>\n            {error &&\n            <h2>Ошибка {error}</h2>\n            }\n            {isLoading ? <h1>loading...</h1> :\n                <div>\n                    {\n                        notes.map(note => (\n                            <NoteItem className='NoteItem' key={note.id} note={note} />\n                        ))\n                    }\n                </div>\n            }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}