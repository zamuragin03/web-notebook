{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport CatsService from '../../API/Cats/CatsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatSelector = _ref => {\n  _s();\n  let {\n    note,\n    value,\n    defaultValue,\n    ...props\n  } = _ref;\n  // const [myNote, setmyNote] = useState(initialState);\n  const {\n    user,\n    authTokens\n  } = useContext(AuthContext);\n  const [selectedCat, setselectedCat] = useState('');\n  const [cats, setCats] = useState([]);\n  const [fetchCats, isLoading, error] = useFetching(async () => {\n    let fetched_cats = await CatsService.get_all_cats();\n    setCats(fetched_cats);\n  });\n  const fetch_cat = async () => {\n    if (note == null) return;\n    let response = await fetch(`/api/get_cat/${note === null || note === void 0 ? void 0 : note.category}`);\n    if (response.status === 200) {\n      let data = await response.json();\n      setselectedCat(data);\n    }\n  };\n  useEffect(() => {\n    fetch_cat();\n    if (note != null) {\n      fetchCats();\n    }\n  }, [note]);\n  useEffect(() => {\n    update_cat();\n  }, [selectedCat]);\n  function ChangeCat(value) {\n    cats.forEach(element => {\n      if (element.name == value) {\n        setselectedCat(element);\n        return;\n      }\n    });\n  }\n  let update_cat = async () => {\n    if (note == null) return;\n    console.log(selectedCat.id.toString() + ' ' + selectedCat.name);\n    await fetch(`/api/update_note/${note.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authTokens.access}`\n      },\n      body: JSON.stringify({\n        'category': selectedCat.id\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    ...props,\n    defaultValue: selectedCat.name,\n    value: selectedCat.name,\n    onChange: e => ChangeCat(e.target.value),\n    children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: cat.name,\n      children: cat.name\n    }, cat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(CatSelector, \"CV/Bwds41IDDlTjJNmIm/mtBkuo=\", false, function () {\n  return [useFetching];\n});\n_c = CatSelector;\nexport default CatSelector;\nvar _c;\n$RefreshReg$(_c, \"CatSelector\");","map":{"version":3,"names":["React","useEffect","useState","useFetching","CatsService","jsxDEV","_jsxDEV","CatSelector","_ref","_s","note","value","defaultValue","props","user","authTokens","useContext","AuthContext","selectedCat","setselectedCat","cats","setCats","fetchCats","isLoading","error","fetched_cats","get_all_cats","fetch_cat","response","fetch","category","status","data","json","update_cat","ChangeCat","forEach","element","name","console","log","id","toString","method","headers","access","body","JSON","stringify","onChange","e","target","children","map","cat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react'\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport CatsService from '../../API/Cats/CatsService';\n\nconst CatSelector = ({ note, value, defaultValue, ...props }) => {\n    // const [myNote, setmyNote] = useState(initialState);\n    const { user, authTokens } = useContext(AuthContext)\n\n    const [selectedCat, setselectedCat] = useState('');\n    const [cats, setCats] = useState([]);\n    const [fetchCats, isLoading, error] = useFetching(async () => {\n        let fetched_cats = await CatsService.get_all_cats();\n        setCats(fetched_cats)\n    })\n    const fetch_cat = async () => {\n        if (note == null) return\n        let response = await fetch(`/api/get_cat/${note?.category}`)\n        if (response.status === 200) {\n            let data = await response.json()\n            setselectedCat(data)\n        }\n    }\n    useEffect(() => {\n        fetch_cat()\n        if (note != null) {\n            fetchCats()\n        }\n    }, [note,])\n    useEffect(() => {\n        update_cat()\n\n    }, [selectedCat])\n\n\n    function ChangeCat(value) {\n        cats.forEach(element => {\n            if (element.name == value) {\n                setselectedCat(element)\n                return\n            }\n        });\n    }\n\n    let update_cat = async () => {\n        if (note == null) return\n        console.log(selectedCat.id.toString()+' ' +selectedCat.name);\n        await fetch(`/api/update_note/${note.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${authTokens.access}`\n                \n            },\n            body: JSON.stringify({ 'category': selectedCat.id })\n        })\n    }\n    return (\n        <select {...props} defaultValue={selectedCat.name} value={selectedCat.name} onChange={(e) => ChangeCat(e.target.value)}>\n            {cats.map(cat =>\n                <option key={cat.id} value={cat.name} >\n                    {cat.name}\n                </option>\n            )}\n        </select>\n\n    )\n}\n\nexport default CatSelector"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}