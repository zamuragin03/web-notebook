{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/components/Context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useNavigate } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).username : null);\n  const [authTokens, setauthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  const navigate = useNa;\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, 270000);\n    return () => clearInterval(interval);\n  }, [authTokens]);\n  let loginUser = async (username, password) => {\n    let response = await fetch(`/api/token/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password': password\n      })\n    });\n    let data = await response.json();\n    console.log(data);\n    if (response.status === 200) {\n      setauthTokens(data);\n      setUser(jwt_decode(data.access).username);\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      history.push('/about');\n    } else {\n      alert('bad data');\n    }\n  };\n  let logoutUser = () => {\n    setauthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n  };\n  let updateToken = async () => {\n    console.log('me executed');\n    let response = await fetch(`/api/token/refresh/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setauthTokens(data);\n      setUser(jwt_decode(data.access).username);\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n  };\n  let contextData = {\n    user: user,\n    loginUser: loginUser,\n    logoutUser: logoutUser,\n    authTokens: authTokens\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"MC0g8winIVZOHMtJNd3zcy1mBvE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","useParams","Link","jwt_decode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","localStorage","getItem","username","authTokens","setauthTokens","JSON","parse","navigate","useNa","interval","setInterval","updateToken","clearInterval","loginUser","password","response","fetch","method","headers","body","stringify","data","json","console","log","status","access","setItem","history","push","alert","logoutUser","removeItem","refresh","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/components/Context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useNavigate } from \"react\";\nimport { useParams, Link, } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nconst AuthContext = createContext()\nexport default AuthContext\n\nexport const AuthProvider = ({ children }) => {\n\n    const [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).username : null)\n    const [authTokens, setauthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    const navigate = useNa\n    useEffect(() => {\n        let interval =setInterval(() => {\n            if(authTokens){\n                updateToken()   \n            }\n        }, 270000);\n        return ()=> clearInterval(interval)\n\n    }, [authTokens]);\n    let loginUser = async (username, password) => {\n        let response = await fetch(`/api/token/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'username': username, 'password': password })\n        })\n        let data = await response.json()\n        console.log(data);\n        if (response.status === 200) {\n            setauthTokens(data)\n            setUser(jwt_decode(data.access).username)\n            localStorage.setItem('authTokens', JSON.stringify(data))\n            history.push('/about')\n\n        }\n        else {\n            alert('bad data')\n        }\n    }\n    let logoutUser  =() =>{\n        setauthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n\n    }\n    let updateToken = async () =>{\n        console.log('me executed');\n        let response = await fetch(`/api/token/refresh/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'refresh': authTokens.refresh })\n        })\n        let data = await response.json()\n        if (response.status === 200) {\n            setauthTokens(data)\n            setUser(jwt_decode(data.access).username)\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }\n        else{\n            logoutUser()\n        }\n    }\n\n    let contextData = {\n        user: user,\n        loginUser: loginUser,\n        logoutUser:logoutUser,\n        authTokens:authTokens,\n    }\n\n    return (\n        <AuthContext.Provider value={contextData}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}