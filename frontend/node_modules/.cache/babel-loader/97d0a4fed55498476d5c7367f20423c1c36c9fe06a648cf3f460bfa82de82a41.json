{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/components/Context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [authTokens, setauthTokens] = useState(null);\n  let loginUser = async (username, password) => {\n    console.log('pizda');\n    console.log(username);\n    console.log(password);\n    let response = await fetch(`/api/token/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password': password\n      })\n    });\n    let data = await response.json();\n    console.log(data);\n  };\n  let contextData = {\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"HuFn6pBD0GhcbWBPFSE+TrdnqfY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","authTokens","setauthTokens","loginUser","username","password","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/components/Context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst AuthContext = createContext()\nexport default AuthContext\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [authTokens, setauthTokens] = useState(null);\n    \n    let loginUser = async (username, password) =>{\n        console.log('pizda');\n        console.log(username);\n        console.log(password);\n        let response = await fetch(`/api/token/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({'username':username,'password':password})\n        })\n        let data = await response.json()\n        console.log(data);\n    }   \n    let contextData={\n        loginUser:loginUser\n    }\n    \n    return (\n        <AuthContext.Provider value={contextData}>\n        {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AACnC,eAAeK,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAElD,IAAIa,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAI;IACzCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBD,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAY,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,UAAU,EAACV,QAAQ;QAAC,UAAU,EAACC;MAAQ,CAAC;IAClE,CAAC,CAAC;IACF,IAAIU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAChCV,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;EACrB,CAAC;EACD,IAAIE,WAAW,GAAC;IACZd,SAAS,EAACA;EACd,CAAC;EAED,oBACIV,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAAnB,QAAA,EACxCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACc;AAE/B,CAAC;AAAA1B,EAAA,CA3BYF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}