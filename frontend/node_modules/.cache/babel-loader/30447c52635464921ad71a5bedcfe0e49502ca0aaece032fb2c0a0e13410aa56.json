{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx\",\n  _s = $RefreshSig$();\nimport ColorPicker from '../ColorPicker/ColorPicker';\nimport classes from './CatSelector.module.css';\nimport React, { useEffect, useState } from 'react';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport CatsService from '../../API/Cats/CatsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatSelector = _ref => {\n  _s();\n  let {\n    note,\n    value,\n    defaultValue,\n    ...props\n  } = _ref;\n  const [selectedCat, setselectedCat] = useState('');\n  const [cats, setCats] = useState([]);\n  const [fetchCats, isLoading, error] = useFetching(async () => {\n    let fetched_cats = await CatsService.get_all_cats();\n    setCats(fetched_cats);\n  });\n  useEffect(() => {\n    ChangeCat();\n  }, [], selectedCat);\n  useEffect(() => {\n    fetchCats();\n    ChangeCat();\n  }, [], selectedCat);\n  function ChangeCat(value) {\n    setselectedCat(value);\n    // note?.category.name=value\n    // if (selectedCat != null) {\n    console.log(note);\n    // note?.category.name = selectedCat\n    // fetch(`/api/update_note/${note?.id}`, {\n    //     method: 'PUT',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify(note)\n    // })\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    ...props,\n    value: selectedCat,\n    defaultValue: selectedCat,\n    onChange: e => ChangeCat(e.target.value),\n    children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: cat.name,\n      children: cat.name\n    }, cat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CatSelector, \"+xCmQt9s0JCNA4nxduX3ahoA7lw=\", false, function () {\n  return [useFetching];\n});\n_c = CatSelector;\nexport default CatSelector;\nvar _c;\n$RefreshReg$(_c, \"CatSelector\");","map":{"version":3,"names":["ColorPicker","classes","React","useEffect","useState","useFetching","CatsService","jsxDEV","_jsxDEV","CatSelector","_ref","_s","note","value","defaultValue","props","selectedCat","setselectedCat","cats","setCats","fetchCats","isLoading","error","fetched_cats","get_all_cats","ChangeCat","console","log","onChange","e","target","children","map","cat","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/UI/Selector/CatSelector.jsx"],"sourcesContent":["import ColorPicker from '../ColorPicker/ColorPicker'\nimport classes from './CatSelector.module.css'\nimport React, { useEffect, useState } from 'react'\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport CatsService from '../../API/Cats/CatsService';\n\nconst CatSelector = ({ note, value, defaultValue, ...props }) => {\n    const [selectedCat, setselectedCat] = useState('');\n    const [cats, setCats] = useState([]);\n    const [fetchCats, isLoading, error] = useFetching(async () => {\n        let fetched_cats = await CatsService.get_all_cats()\n        setCats(fetched_cats)\n    })\n    useEffect(() => {\n        ChangeCat()\n    }, [], selectedCat)\n    useEffect(() => {\n        fetchCats()\n        ChangeCat()\n    }, [], selectedCat)\n    function ChangeCat(value) {\n        setselectedCat(value)\n        // note?.category.name=value\n        // if (selectedCat != null) {\n            console.log(note);\n            // note?.category.name = selectedCat\n            // fetch(`/api/update_note/${note?.id}`, {\n            //     method: 'PUT',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     body: JSON.stringify(note)\n            // })\n        // }\n    }\n    return (\n        <select {...props} value={selectedCat} defaultValue={selectedCat} onChange={(e) => ChangeCat(e.target.value)}>\n            {cats.map(cat =>\n                <option key={cat.id} value={cat.name} >\n                    {cat.name}\n                </option>\n            )}\n        </select>\n\n    )\n}\n\nexport default CatSelector"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,4BAA4B;AACpD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,yCAAyC;AACrE,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,IAAI;IAAEC,KAAK;IAAEC,YAAY;IAAE,GAAGC;EAAM,CAAC,GAAAL,IAAA;EACxD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,SAAS,EAAEC,SAAS,EAAEC,KAAK,CAAC,GAAGjB,WAAW,CAAC,YAAY;IAC1D,IAAIkB,YAAY,GAAG,MAAMjB,WAAW,CAACkB,YAAY,EAAE;IACnDL,OAAO,CAACI,YAAY,CAAC;EACzB,CAAC,CAAC;EACFpB,SAAS,CAAC,MAAM;IACZsB,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,EAAET,WAAW,CAAC;EACnBb,SAAS,CAAC,MAAM;IACZiB,SAAS,EAAE;IACXK,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,EAAET,WAAW,CAAC;EACnB,SAASS,SAASA,CAACZ,KAAK,EAAE;IACtBI,cAAc,CAACJ,KAAK,CAAC;IACrB;IACA;IACIa,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;EACJ;;EACA,oBACIJ,OAAA;IAAA,GAAYO,KAAK;IAAEF,KAAK,EAAEG,WAAY;IAACF,YAAY,EAAEE,WAAY;IAACY,QAAQ,EAAGC,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;IAAAkB,QAAA,EACxGb,IAAI,CAACc,GAAG,CAACC,GAAG,iBACTzB,OAAA;MAAqBK,KAAK,EAAEoB,GAAG,CAACC,IAAK;MAAAH,QAAA,EAChCE,GAAG,CAACC;IAAI,GADAD,GAAG,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEV;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAGjB,CAAC;AAAA5B,EAAA,CAvCKF,WAAW;EAAA,QAGyBJ,WAAW;AAAA;AAAAmC,EAAA,GAH/C/B,WAAW;AAyCjB,eAAeA,WAAW;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}