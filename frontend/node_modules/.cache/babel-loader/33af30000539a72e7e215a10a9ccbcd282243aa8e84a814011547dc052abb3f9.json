{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/pages/Notes/AddPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport CreateButton from '../../UI/CreateButton/CreateButton';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport CatsService from '../../API/Cats/CatsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPage = () => {\n  _s();\n  const [note, setNote] = useState(null);\n  const navigate = useNavigate();\n  function ChangeNote(event) {\n    setNote({\n      ...note,\n      'body': event.target.value\n    });\n  }\n  const [fetchNotes, isLoading, error] = useFetching(async () => {\n    let cats = await CatsService.get_all_notes();\n    let sorted_note = notes.sort(function (b, a) {\n      return new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime();\n    });\n    setNotes(sorted_note);\n  });\n  async function Add_Note() {\n    let response = await fetch(`/api/create_note/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n    if (response.status === 200) {\n      navigate('/notes');\n    }\n    document.getElementsByName('note_body')[0].placeholder = \"shouldn't be empty\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"note_body\",\n      className: \"change_text_area\",\n      placeholder: \"type your note here\",\n      onChange: event => ChangeNote(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateButton, {\n      className: \"add_note\",\n      onClick: Add_Note,\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      defaultValue: selectedCat.name,\n      value: selectedCat.name,\n      onChange: e => ChangeCat(e.target.value),\n      children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.name,\n        children: cat.name\n      }, cat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPage, \"Hq25MZ+gR8JuDRRsqJmHHFHhWwk=\", false, function () {\n  return [useNavigate, useFetching];\n});\n_c = AddPage;\nexport default AddPage;\nvar _c;\n$RefreshReg$(_c, \"AddPage\");","map":{"version":3,"names":["React","useState","useParams","Link","useNavigate","CreateButton","useFetching","CatsService","jsxDEV","_jsxDEV","AddPage","_s","note","setNote","navigate","ChangeNote","event","target","value","fetchNotes","isLoading","error","cats","get_all_notes","sorted_note","notes","sort","b","a","Date","updated_at","getTime","setNotes","Add_Note","response","fetch","method","headers","body","JSON","stringify","status","document","getElementsByName","placeholder","children","name","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","defaultValue","selectedCat","e","ChangeCat","map","cat","id","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/pages/Notes/AddPage.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport CreateButton from '../../UI/CreateButton/CreateButton';\nimport { useFetching } from '../../components/hooks/useFetchingNotes';\nimport CatsService from '../../API/Cats/CatsService';\n\nexport const AddPage = () => {\n    const [note, setNote] = useState(null);\n    const navigate = useNavigate();\n\n    function ChangeNote(event) {\n        setNote({ ...note, 'body': event.target.value })\n    }\n\n    const [fetchNotes, isLoading, error] = useFetching(async () =>{\n        let cats = await CatsService.get_all_notes()\n        let sorted_note =  notes.sort(function(b, a) {\n            return new Date(a.updated_at).getTime()  - new Date(b.updated_at).getTime();\n           });\n        setNotes(sorted_note)\n    })\n    async function Add_Note() {\n        let response = await fetch(`/api/create_note/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(note)\n        })\n        if (response.status === 200) {\n            navigate('/notes')\n        }\n\n        document.getElementsByName('note_body')[0].placeholder = \"shouldn't be empty\";\n\n    }\n    return (\n        <div>\n            <textarea name='note_body' className='change_text_area' placeholder='type your note here' onChange={(event) => ChangeNote(event)} ></textarea>\n            <CreateButton className='add_note' onClick={Add_Note} >\n                create\n            </CreateButton>\n            <select  defaultValue={selectedCat.name} value={selectedCat.name} onChange={(e) => ChangeCat(e.target.value)}>\n            {cats.map(cat =>\n                <option key={cat.id} value={cat.name} >\n                    {cat.name}\n                </option>\n            )}\n        </select>\n        </div>\n    )\n}\n\nexport default AddPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}