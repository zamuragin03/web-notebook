{"ast":null,"code":"var _jsxFileName = \"/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/components/Context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).username : null);\n  const [authTokens, setauthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  const [userId, setuserId] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).user_id : null);\n  const [error, seterror] = useState('');\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, 270000);\n    return () => clearInterval(interval);\n  }, [authTokens]);\n  let loginUser = async (username, password) => {\n    let response = await fetch(`/api/token/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password': password\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setauthTokens(data);\n      setUser(jwt_decode(data.access).username);\n      setuserId(jwt_decode(data.access).user_id);\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    }\n    if (response.status === 400) {\n      seterror('Поля не должны быть пустые');\n    }\n    if (response.status === 401) {\n      seterror('Неправильный логин или пароль');\n    }\n  };\n  let logoutUser = () => {\n    setauthTokens(null);\n    setUser(null);\n    setuserId(null);\n    localStorage.removeItem('authTokens');\n  };\n  let updateToken = async () => {\n    console.log('token updated');\n    let response = await fetch(`/api/token/refresh/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setauthTokens(data);\n      setUser(jwt_decode(data.access).username);\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n  };\n  let registerUser = async (username, password) => {\n    // console.log(username);\n    // console.log(password);\n    let response = await fetch(`api/drf-auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password': password\n      })\n    });\n  };\n  let contextData = {\n    user: user,\n    loginUser: loginUser,\n    logoutUser: logoutUser,\n    authTokens: authTokens,\n    registerUser: registerUser,\n    userId: userId,\n    updateToken: updateToken,\n    error: error\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"oKqG6fZLJdWDMzJxsMjvXMJz9NA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","localStorage","getItem","username","authTokens","setauthTokens","JSON","parse","userId","setuserId","user_id","error","seterror","interval","setInterval","updateToken","clearInterval","loginUser","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","logoutUser","removeItem","console","log","refresh","registerUser","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zanuragin03/Desktop/pyprojects/MusicApp/frontend/src/components/Context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nconst AuthContext = createContext()\nexport default AuthContext\n\nexport const AuthProvider = ({ children }) => {\n\n    const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).username : null)\n    const [authTokens, setauthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    const [userId, setuserId] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')).user_id : null)\n    const [error, seterror] = useState('');\n    useEffect(() => {\n        let interval = setInterval(() => {\n            if (authTokens) {\n                updateToken()\n            }\n        }, 270000);\n        return () => clearInterval(interval)\n\n    }, [authTokens]);\n\n    let loginUser = async (username, password) => {\n        let response = await fetch(`/api/token/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'username': username, 'password': password })\n        })\n        let data = await response.json()\n        if (response.status === 200) {\n            setauthTokens(data)\n            setUser(jwt_decode(data.access).username)\n            setuserId(jwt_decode(data.access).user_id)\n            localStorage.setItem('authTokens', JSON.stringify(data))\n\n        }\n        if (response.status===400){\n            seterror('Поля не должны быть пустые')\n            \n        }\n        if (response.status===401){\n            seterror('Неправильный логин или пароль')\n        }\n    }\n    let logoutUser = () => {\n        setauthTokens(null)\n        setUser(null)\n        setuserId(null)\n        localStorage.removeItem('authTokens')\n\n    }\n    let updateToken = async () => {\n        console.log('token updated');\n        let response = await fetch(`/api/token/refresh/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'refresh': authTokens.refresh })\n        })\n        let data = await response.json()\n        if (response.status === 200) {\n            setauthTokens(data)\n            setUser(jwt_decode(data.access).username)\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }\n        else {\n            logoutUser()\n        }\n    }\n    let registerUser = async (username, password) => {\n        // console.log(username);\n        // console.log(password);\n        let response = await fetch(`api/drf-auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ 'username': username, 'password': password })\n        })\n    }\n\n\n    let contextData = {\n        user: user,\n        loginUser: loginUser,\n        logoutUser: logoutUser,\n        authTokens: authTokens,\n        registerUser:registerUser,\n        userId:userId,\n        updateToken: updateToken,\n        error:error,\n    }\n\n    return (\n        <AuthContext.Provider value={contextData}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}